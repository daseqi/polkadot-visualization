{
  substrate: {
    code: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Object],
      method: 'code',
      section: 'substrate',
      toJSON: [Function (anonymous)]
    },
    heapPages: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Object],
      method: 'heapPages',
      section: 'substrate',
      toJSON: [Function (anonymous)]
    },
    extrinsicIndex: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Object],
      method: 'extrinsicIndex',
      section: 'substrate',
      toJSON: [Function (anonymous)]
    },
    changesTrieConfig: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Object],
      method: 'changesTrieConfig',
      section: 'substrate',
      toJSON: [Function (anonymous)]
    },
    childStorageKeyPrefix: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Object],
      method: 'childStorageKeyPrefix',
      section: 'substrate',
      toJSON: [Function (anonymous)]
    }
  },
  system: {
    account: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'account',
      section: 'system',
      toJSON: [Function (anonymous)]
    },
    extrinsicCount: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'extrinsicCount',
      section: 'system',
      toJSON: [Function (anonymous)]
    },
    blockWeight: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'blockWeight',
      section: 'system',
      toJSON: [Function (anonymous)]
    },
    allExtrinsicsLen: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'allExtrinsicsLen',
      section: 'system',
      toJSON: [Function (anonymous)]
    },
    blockHash: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'blockHash',
      section: 'system',
      toJSON: [Function (anonymous)]
    },
    extrinsicData: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'extrinsicData',
      section: 'system',
      toJSON: [Function (anonymous)]
    },
    number: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'number',
      section: 'system',
      toJSON: [Function (anonymous)]
    },
    parentHash: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'parentHash',
      section: 'system',
      toJSON: [Function (anonymous)]
    },
    extrinsicsRoot: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'extrinsicsRoot',
      section: 'system',
      toJSON: [Function (anonymous)]
    },
    digest: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'digest',
      section: 'system',
      toJSON: [Function (anonymous)]
    },
    events: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'events',
      section: 'system',
      toJSON: [Function (anonymous)]
    },
    eventCount: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'eventCount',
      section: 'system',
      toJSON: [Function (anonymous)]
    },
    eventTopics: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'eventTopics',
      section: 'system',
      toJSON: [Function (anonymous)]
    },
    lastRuntimeUpgrade: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'lastRuntimeUpgrade',
      section: 'system',
      toJSON: [Function (anonymous)]
    },
    executionPhase: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'executionPhase',
      section: 'system',
      toJSON: [Function (anonymous)]
    }
  },
  randomnessCollectiveFlip: {
    randomMaterial: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'randomMaterial',
      section: 'randomnessCollectiveFlip',
      toJSON: [Function (anonymous)]
    }
  },
  babe: {
    epochIndex: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'epochIndex',
      section: 'babe',
      toJSON: [Function (anonymous)]
    },
    authorities: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'authorities',
      section: 'babe',
      toJSON: [Function (anonymous)]
    },
    genesisSlot: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'genesisSlot',
      section: 'babe',
      toJSON: [Function (anonymous)]
    },
    currentSlot: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'currentSlot',
      section: 'babe',
      toJSON: [Function (anonymous)]
    },
    randomness: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'randomness',
      section: 'babe',
      toJSON: [Function (anonymous)]
    },
    nextEpochConfig: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'nextEpochConfig',
      section: 'babe',
      toJSON: [Function (anonymous)]
    },
    nextRandomness: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'nextRandomness',
      section: 'babe',
      toJSON: [Function (anonymous)]
    },
    segmentIndex: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'segmentIndex',
      section: 'babe',
      toJSON: [Function (anonymous)]
    },
    underConstruction: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'underConstruction',
      section: 'babe',
      toJSON: [Function (anonymous)]
    },
    initialized: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'initialized',
      section: 'babe',
      toJSON: [Function (anonymous)]
    },
    lateness: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'lateness',
      section: 'babe',
      toJSON: [Function (anonymous)]
    }
  },
  timestamp: {
    now: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'now',
      section: 'timestamp',
      toJSON: [Function (anonymous)]
    },
    didUpdate: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'didUpdate',
      section: 'timestamp',
      toJSON: [Function (anonymous)]
    }
  },
  indices: {
    accounts: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'accounts',
      section: 'indices',
      toJSON: [Function (anonymous)]
    }
  },
  balances: {
    totalIssuance: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'totalIssuance',
      section: 'balances',
      toJSON: [Function (anonymous)]
    },
    account: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'account',
      section: 'balances',
      toJSON: [Function (anonymous)]
    },
    locks: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'locks',
      section: 'balances',
      toJSON: [Function (anonymous)]
    },
    storageVersion: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'storageVersion',
      section: 'balances',
      toJSON: [Function (anonymous)]
    }
  },
  transactionPayment: {
    nextFeeMultiplier: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'nextFeeMultiplier',
      section: 'transactionPayment',
      toJSON: [Function (anonymous)]
    },
    storageVersion: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'storageVersion',
      section: 'transactionPayment',
      toJSON: [Function (anonymous)]
    }
  },
  authorship: {
    uncles: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'uncles',
      section: 'authorship',
      toJSON: [Function (anonymous)]
    },
    author: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'author',
      section: 'authorship',
      toJSON: [Function (anonymous)]
    },
    didSetUncles: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'didSetUncles',
      section: 'authorship',
      toJSON: [Function (anonymous)]
    }
  },
  staking: {
    historyDepth: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'historyDepth',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    validatorCount: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'validatorCount',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    minimumValidatorCount: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'minimumValidatorCount',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    invulnerables: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'invulnerables',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    bonded: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'bonded',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    ledger: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'ledger',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    payee: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'payee',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    validators: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'validators',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    nominators: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'nominators',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    currentEra: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'currentEra',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    activeEra: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'activeEra',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    erasStartSessionIndex: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'erasStartSessionIndex',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    erasStakers: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'erasStakers',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    erasStakersClipped: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'erasStakersClipped',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    erasValidatorPrefs: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'erasValidatorPrefs',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    erasValidatorReward: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'erasValidatorReward',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    erasRewardPoints: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'erasRewardPoints',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    erasTotalStake: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'erasTotalStake',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    forceEra: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'forceEra',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    slashRewardFraction: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'slashRewardFraction',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    canceledSlashPayout: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'canceledSlashPayout',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    unappliedSlashes: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'unappliedSlashes',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    bondedEras: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'bondedEras',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    validatorSlashInEra: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'validatorSlashInEra',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    nominatorSlashInEra: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'nominatorSlashInEra',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    slashingSpans: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'slashingSpans',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    spanSlash: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'spanSlash',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    earliestUnappliedSlash: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'earliestUnappliedSlash',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    snapshotValidators: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'snapshotValidators',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    snapshotNominators: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'snapshotNominators',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    queuedElected: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'queuedElected',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    queuedScore: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'queuedScore',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    eraElectionStatus: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'eraElectionStatus',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    isCurrentSessionFinal: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'isCurrentSessionFinal',
      section: 'staking',
      toJSON: [Function (anonymous)]
    },
    storageVersion: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'storageVersion',
      section: 'staking',
      toJSON: [Function (anonymous)]
    }
  },
  offences: {
    reports: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'reports',
      section: 'offences',
      toJSON: [Function (anonymous)]
    },
    deferredOffences: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'deferredOffences',
      section: 'offences',
      toJSON: [Function (anonymous)]
    },
    concurrentReportsIndex: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'concurrentReportsIndex',
      section: 'offences',
      toJSON: [Function (anonymous)]
    },
    reportsByKindIndex: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'reportsByKindIndex',
      section: 'offences',
      toJSON: [Function (anonymous)]
    }
  },
  session: {
    validators: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'validators',
      section: 'session',
      toJSON: [Function (anonymous)]
    },
    currentIndex: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'currentIndex',
      section: 'session',
      toJSON: [Function (anonymous)]
    },
    queuedChanged: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'queuedChanged',
      section: 'session',
      toJSON: [Function (anonymous)]
    },
    queuedKeys: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'queuedKeys',
      section: 'session',
      toJSON: [Function (anonymous)]
    },
    disabledValidators: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'disabledValidators',
      section: 'session',
      toJSON: [Function (anonymous)]
    },
    nextKeys: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'nextKeys',
      section: 'session',
      toJSON: [Function (anonymous)]
    },
    keyOwner: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'keyOwner',
      section: 'session',
      toJSON: [Function (anonymous)]
    }
  },
  finalityTracker: {
    recentHints: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'recentHints',
      section: 'finalityTracker',
      toJSON: [Function (anonymous)]
    },
    orderedHints: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'orderedHints',
      section: 'finalityTracker',
      toJSON: [Function (anonymous)]
    },
    median: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'median',
      section: 'finalityTracker',
      toJSON: [Function (anonymous)]
    },
    update: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'update',
      section: 'finalityTracker',
      toJSON: [Function (anonymous)]
    },
    initialized: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'initialized',
      section: 'finalityTracker',
      toJSON: [Function (anonymous)]
    }
  },
  grandpa: {
    state: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'state',
      section: 'grandpa',
      toJSON: [Function (anonymous)]
    },
    pendingChange: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'pendingChange',
      section: 'grandpa',
      toJSON: [Function (anonymous)]
    },
    nextForced: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'nextForced',
      section: 'grandpa',
      toJSON: [Function (anonymous)]
    },
    stalled: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'stalled',
      section: 'grandpa',
      toJSON: [Function (anonymous)]
    },
    currentSetId: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'currentSetId',
      section: 'grandpa',
      toJSON: [Function (anonymous)]
    },
    setIdSession: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'setIdSession',
      section: 'grandpa',
      toJSON: [Function (anonymous)]
    }
  },
  imOnline: {
    heartbeatAfter: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'heartbeatAfter',
      section: 'imOnline',
      toJSON: [Function (anonymous)]
    },
    keys: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'keys',
      section: 'imOnline',
      toJSON: [Function (anonymous)]
    },
    receivedHeartbeats: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'receivedHeartbeats',
      section: 'imOnline',
      toJSON: [Function (anonymous)]
    },
    authoredBlocks: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'authoredBlocks',
      section: 'imOnline',
      toJSON: [Function (anonymous)]
    }
  },
  democracy: {
    publicPropCount: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'publicPropCount',
      section: 'democracy',
      toJSON: [Function (anonymous)]
    },
    publicProps: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'publicProps',
      section: 'democracy',
      toJSON: [Function (anonymous)]
    },
    depositOf: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'depositOf',
      section: 'democracy',
      toJSON: [Function (anonymous)]
    },
    preimages: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'preimages',
      section: 'democracy',
      toJSON: [Function (anonymous)]
    },
    referendumCount: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'referendumCount',
      section: 'democracy',
      toJSON: [Function (anonymous)]
    },
    lowestUnbaked: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'lowestUnbaked',
      section: 'democracy',
      toJSON: [Function (anonymous)]
    },
    referendumInfoOf: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'referendumInfoOf',
      section: 'democracy',
      toJSON: [Function (anonymous)]
    },
    votingOf: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'votingOf',
      section: 'democracy',
      toJSON: [Function (anonymous)]
    },
    locks: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'locks',
      section: 'democracy',
      toJSON: [Function (anonymous)]
    },
    lastTabledWasExternal: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'lastTabledWasExternal',
      section: 'democracy',
      toJSON: [Function (anonymous)]
    },
    nextExternal: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'nextExternal',
      section: 'democracy',
      toJSON: [Function (anonymous)]
    },
    blacklist: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'blacklist',
      section: 'democracy',
      toJSON: [Function (anonymous)]
    },
    cancellations: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'cancellations',
      section: 'democracy',
      toJSON: [Function (anonymous)]
    },
    storageVersion: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'storageVersion',
      section: 'democracy',
      toJSON: [Function (anonymous)]
    }
  },
  council: {
    proposals: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'proposals',
      section: 'council',
      toJSON: [Function (anonymous)]
    },
    proposalOf: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'proposalOf',
      section: 'council',
      toJSON: [Function (anonymous)]
    },
    voting: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'voting',
      section: 'council',
      toJSON: [Function (anonymous)]
    },
    proposalCount: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'proposalCount',
      section: 'council',
      toJSON: [Function (anonymous)]
    },
    members: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'members',
      section: 'council',
      toJSON: [Function (anonymous)]
    },
    prime: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'prime',
      section: 'council',
      toJSON: [Function (anonymous)]
    }
  },
  technicalCommittee: {
    proposals: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'proposals',
      section: 'technicalCommittee',
      toJSON: [Function (anonymous)]
    },
    proposalOf: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'proposalOf',
      section: 'technicalCommittee',
      toJSON: [Function (anonymous)]
    },
    voting: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'voting',
      section: 'technicalCommittee',
      toJSON: [Function (anonymous)]
    },
    proposalCount: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'proposalCount',
      section: 'technicalCommittee',
      toJSON: [Function (anonymous)]
    },
    members: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'members',
      section: 'technicalCommittee',
      toJSON: [Function (anonymous)]
    },
    prime: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'prime',
      section: 'technicalCommittee',
      toJSON: [Function (anonymous)]
    }
  },
  electionsPhragmen: {
    members: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'members',
      section: 'electionsPhragmen',
      toJSON: [Function (anonymous)]
    },
    runnersUp: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'runnersUp',
      section: 'electionsPhragmen',
      toJSON: [Function (anonymous)]
    },
    electionRounds: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'electionRounds',
      section: 'electionsPhragmen',
      toJSON: [Function (anonymous)]
    },
    voting: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'voting',
      section: 'electionsPhragmen',
      toJSON: [Function (anonymous)]
    },
    candidates: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'candidates',
      section: 'electionsPhragmen',
      toJSON: [Function (anonymous)]
    }
  },
  technicalMembership: {
    members: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'members',
      section: 'technicalMembership',
      toJSON: [Function (anonymous)]
    },
    prime: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'prime',
      section: 'technicalMembership',
      toJSON: [Function (anonymous)]
    }
  },
  treasury: {
    proposalCount: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'proposalCount',
      section: 'treasury',
      toJSON: [Function (anonymous)]
    },
    proposals: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'proposals',
      section: 'treasury',
      toJSON: [Function (anonymous)]
    },
    approvals: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'approvals',
      section: 'treasury',
      toJSON: [Function (anonymous)]
    },
    tips: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'tips',
      section: 'treasury',
      toJSON: [Function (anonymous)]
    },
    reasons: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'reasons',
      section: 'treasury',
      toJSON: [Function (anonymous)]
    }
  },
  claims: {
    claims: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'claims',
      section: 'claims',
      toJSON: [Function (anonymous)]
    },
    total: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'total',
      section: 'claims',
      toJSON: [Function (anonymous)]
    },
    vesting: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'vesting',
      section: 'claims',
      toJSON: [Function (anonymous)]
    },
    signing: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'signing',
      section: 'claims',
      toJSON: [Function (anonymous)]
    },
    preclaims: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'preclaims',
      section: 'claims',
      toJSON: [Function (anonymous)]
    }
  },
  identity: {
    identityOf: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'identityOf',
      section: 'identity',
      toJSON: [Function (anonymous)]
    },
    superOf: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'superOf',
      section: 'identity',
      toJSON: [Function (anonymous)]
    },
    subsOf: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'subsOf',
      section: 'identity',
      toJSON: [Function (anonymous)]
    },
    registrars: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'registrars',
      section: 'identity',
      toJSON: [Function (anonymous)]
    }
  },
  society: {
    founder: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'founder',
      section: 'society',
      toJSON: [Function (anonymous)]
    },
    rules: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'rules',
      section: 'society',
      toJSON: [Function (anonymous)]
    },
    candidates: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'candidates',
      section: 'society',
      toJSON: [Function (anonymous)]
    },
    suspendedCandidates: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'suspendedCandidates',
      section: 'society',
      toJSON: [Function (anonymous)]
    },
    pot: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'pot',
      section: 'society',
      toJSON: [Function (anonymous)]
    },
    head: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'head',
      section: 'society',
      toJSON: [Function (anonymous)]
    },
    members: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'members',
      section: 'society',
      toJSON: [Function (anonymous)]
    },
    suspendedMembers: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'suspendedMembers',
      section: 'society',
      toJSON: [Function (anonymous)]
    },
    bids: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'bids',
      section: 'society',
      toJSON: [Function (anonymous)]
    },
    vouching: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'vouching',
      section: 'society',
      toJSON: [Function (anonymous)]
    },
    payouts: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'payouts',
      section: 'society',
      toJSON: [Function (anonymous)]
    },
    strikes: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'strikes',
      section: 'society',
      toJSON: [Function (anonymous)]
    },
    votes: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'votes',
      section: 'society',
      toJSON: [Function (anonymous)]
    },
    defender: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'defender',
      section: 'society',
      toJSON: [Function (anonymous)]
    },
    defenderVotes: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'defenderVotes',
      section: 'society',
      toJSON: [Function (anonymous)]
    },
    maxMembers: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'maxMembers',
      section: 'society',
      toJSON: [Function (anonymous)]
    }
  },
  recovery: {
    recoverable: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'recoverable',
      section: 'recovery',
      toJSON: [Function (anonymous)]
    },
    activeRecoveries: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'activeRecoveries',
      section: 'recovery',
      toJSON: [Function (anonymous)]
    },
    proxy: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'proxy',
      section: 'recovery',
      toJSON: [Function (anonymous)]
    }
  },
  vesting: {
    vesting: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'vesting',
      section: 'vesting',
      toJSON: [Function (anonymous)]
    }
  },
  scheduler: {
    agenda: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'agenda',
      section: 'scheduler',
      toJSON: [Function (anonymous)]
    },
    lookup: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'lookup',
      section: 'scheduler',
      toJSON: [Function (anonymous)]
    },
    storageVersion: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'storageVersion',
      section: 'scheduler',
      toJSON: [Function (anonymous)]
    }
  },
  proxy: {
    proxies: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'proxies',
      section: 'proxy',
      toJSON: [Function (anonymous)]
    },
    announcements: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'announcements',
      section: 'proxy',
      toJSON: [Function (anonymous)]
    }
  },
  multisig: {
    multisigs: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'multisigs',
      section: 'multisig',
      toJSON: [Function (anonymous)]
    },
    calls: [Function (anonymous)] {
      creator: [Function],
      at: [Function (anonymous)],
      hash: [Function (anonymous)],
      key: [Function (anonymous)],
      keyPrefix: [Function (anonymous)],
      range: [Function (anonymous)],
      size: [Function (anonymous)],
      entries: [Function (anonymous)],
      entriesPaged: [Function (anonymous)],
      keys: [Function (anonymous)],
      keysPaged: [Function (anonymous)],
      multi: [Function (anonymous)],
      meta: [Type [Map]],
      method: 'calls',
      section: 'multisig',
      toJSON: [Function (anonymous)]
    }
  }
}
